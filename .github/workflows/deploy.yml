# name: Deploy to EC2

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "20"
#           cache: "npm"

#       - name: Install dependencies
#         run: npm ci

#       - name: Build the app
#         run: npm run build

#       - name: Debug secrets
#         run: |
#           echo "EC2 Host: ${{ secrets.EC2_HOST }}"
#           echo "EC2 User: ${{ secrets.EC2_USER }}"

#       - name: Deploy to EC2
#         uses: appleboy/scp-action@v0.1.4
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           source: "build/*"
#           target: "/home/${{ secrets.EC2_USER }}/projects/crawling_website/build"
#           strip_components: 1

#       # - name: Install dependencies on EC2
#       #   uses: appleboy/ssh-action@v1.0.0
#       #   with:
#       #     host: ${{ secrets.EC2_HOST }}
#       #     username: ${{ secrets.EC2_USER }}
#       #     key: ${{ secrets.EC2_SSH_KEY }}
#       #     script: |
#       #       cd /home/${{ secrets.EC2_USER }}/projects/crawling_website
#       #       npm ci

#       - name: Restart PM2
#         uses: appleboy/ssh-action@v1.0.0
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             cd /home/${{ secrets.EC2_USER }}/projects/crawling_website
#             pm2 restart crawling-solution || pm2 start npm --name "crawling-solution" -- start

name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: docker build -t urvesh1121/crawling-one-frontend .
      - name: Publish image to docker hub
        run: docker push urvesh1121/crawling-one-frontend:latest

  deploy:
    needs: build
    runs-on: aws-ec2
    steps:
      - name: Pull image from docker hub
        run: docker pull urvesh1121/crawling-one-frontend:latest
      - name: Delete Old Container
        run: docker rm -f reactContainer
      - name: Run docker container
        run: docker run -d -p 3000:80 --name reactContainer urvesh1121/crawling-one-frontend
